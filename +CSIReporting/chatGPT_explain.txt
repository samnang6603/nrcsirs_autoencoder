On CQISelect Calculation from ChatGPT

YOOOO — love the deep-dive. You pasted a classic chunk of MATLAB 5G Toolbox logic that is equal parts "spec compliance" and "engineer pragmatism." I'll walk you through **what that code is doing, why it's doing it**, and where to read the spec / lit to understand each choice so you can code along without summoning eldritch bugs.

I'll keep it spicy, but precise.

---

# Quick TL;DR

That whole block is doing:

1. Keep only CSI-RS REs inside the **BWP**.
2. Call the PMI-selection routine (`hDLPMISelect`) to get PMI candidates and **per-RE/per-subband SINRs** for those PMIs.
3. Handle Type-2 vs Type-1 codebook reporting differences (Type-2 returns SINR matrices differently).
4. If **PRGSize** is configured (precoding resource group), pick *one random i2 index per PRG/subband* per 3GPP rules and use that for CQI calc. That's why you see RNG stuff and `randi(...)` — it's *by spec* (TS 38.214). ([ETSI][1])
5. Map **layer SINRs → codeword SINR** using `nrLayerDemap` (layers are demapped to 1 or 2 codewords), then average subbands to make a wideband number if needed. The final SINR is ready for EESM/MIESM → CQI mapping. ([MathWorks][2])

Now the annotated deep-dive.

---

# Line-by-line meaning & motivation

### 1) BWP restriction & subscripts

```matlab
csirsIndSubs_kTemp = csirsInd(:,1);
... indInBWP = (csirsIndSubs_kTemp >= bwpStart*12 + 1) & csirsIndSubs_kTemp <= (bwpStart + reportConfig.NSizeBWP)*12;
csirsIndSubs_k = csirsIndSubs_kTemp(indInBWP);
...
csirsIndSubs_k = csirsIndSubs_k - bwpStart*12;
```

Purpose: **keep only CSI-RS REs inside the Bandwidth Part (BWP)** used by this CSI report. CSI-RS may be configured outside the reporting BWP; those REs must be ignored for this report. After filtering, indices are made *relative to the BWP* (convenience for array indexing and mapping to RBs).

Spec reading: CSI-RS and CSI reporting are defined across BWPs and the UE must only consider the configured reporting BWP. See 38.211/38.213 for CSI-RS mapping & reporting context. ([ETSI][3], [MathWorks][4])

---

### 2) PMI selection call

```matlab
[PMISet,PMIInfo] = hDLPMISelect(carrier,csirs,reportConfig,nLayers,H,nVar);
sinrPerREPMI = PMIInfo.SINRPerREPMI;
```

`hDLPMISelect` is the heavy-lifter: it loops candidate codebook indices (i1, i2, etc.), ranks, precoders, computes per-RE/per-layer **post-equalizer SINRs** for each PMI candidate, and packs the results into `PMISet` and `PMIInfo`. The code below then reads `SINRPerREPMI` — the raw per-RE SINRs for the tested PMIs.

MATLAB docs show the toolbox computes SINR grids inside PMI selection and exposes them for subsequent CQI calculation/diagnostics. ([MathWorks][4])

---

### 3) Codebook type branching: Type-2 vs others

```matlab
if any(strcmpi(reportConfig.CodebookType,{'Type2','eType2'}))
    SINRperSubband = PMIInfo.SINRPerSubband;
    ...
else
    % Type-1 / non-Type2 handling (PRG logic etc.)
```

Why branch? **Type-2 codebooks** report SINR/PMI differently (granularity, indices). Type-1 (single/multi-panel) has other i1/i2 indexing rules and interacts with PRG (precoding resource group) logic. So MATLAB chooses different downstream handling. See 38.214 and 38.213 for reporting formats. ([ETSI][1], [MathWorks][4])

---

### 4) PRGSize weirdness & `rng(0)` + random i2 selection

This is the bit that made you scream.

* **PRGSize** = precoding randomization grouping size (a.k.a. PRG). 3GPP says that when PRG is configured, the UE should **pick one i2** (one inner PMI index) *randomly* from the set of i2s covering the PRG(s) spanning a subband or wideband when computing CQI — this avoids bias and aligns reporting between UE and gNB assumptions. The MATLAB comment even references **TS 38.214 Section 5.2.1.4.2**. So the random pick is **intentional and required by spec**. ([ETSI][1])

* `rng(0);` — they seed RNG for **repeatability** in examples/tests (so your sim is deterministic). Real UE would use UE RNG; toolbox wants reproducible demos.

* The code constructs `startPRG` to map PRGs → subbands, then picks one `i2` per subband by `randomi2(idx-1) = i2Set(randi(numel(i2Set)));` then uses that i2 to **index into the PMIInfo SINR cubes** and average across PRGs:

  ```matlab
  SINRperSubband(idx-1,:) = mean(PMIInfo.SINRPerSubband(...randomi2...),'omitnan');
  ```

  This produces the SINR for the chosen PMI for that subband. The idea: CQI should be computed under a specific PMI choice; when multiple possible i2 exist for PRGs, spec says choose randomly for CQI evaluation. See TS 38.214. ([ETSI][1])

Short: **not a bug — spec-mandated randomization** (MATLAB seeds RNG for deterministic examples).

---

### 5) `SINRsperRBperCW` and `getSINRperRECQI`

They compute RB-granular SINR matrices for info/debug but note: "These values are not directly used for CQI computation. These are just for information purpose." The toolbox provides these for plotting or deeper diagnostics.

---

### 6) Layer → codeword SINR conversion: `nrLayerDemap` + `cellfun(@sum, ...)`

```matlab
layerSINRs = squeeze(SINRperSubband(subbandIdx,:));
codewordSINRs = cellfun(@sum,nrLayerDemap(layerSINRs));
```

`nrLayerDemap` splits layers into 1 or 2 codeword groups (per TS 38.211 layer mapping rules). For example:

* If 2 layers, maybe both go to CW0 (sum), or split across two codewords depending on mapping.
  They then **sum layer SINRs** that belong to the same codeword (i.e., treating per-layer contributions as additive for combined codeword SINR). That results in `SINRperSubbandperCW` used later for CQI mapping.

Docs: see MATLAB `nrLayerDemap` doc and TS 38.211 table for mapping. ([MathWorks][2])

---

### 7) Making wideband SINR from subbands

If multiple subbands exist, they compute a wideband value as the **mean of subband SINRs** (omit NaNs). This is the simple wideband aggregation (used when the report config or CQI mode expects a wideband CQI). It's a pragmatic average — many implementations use EESM/MIESM instead when compressing RE-level SINRs into an effective one for BLER mapping. MATLAB here is building the inputs for the later EESM/MIESM step. ([MDPI][5], [ResearchGate][6])

---

# Where this lives in 3GPP and literature (go read these)

* **3GPP TS 38.214** — CQI/PMI/RI calculation rules, PRG/PRGSize handling, and CQI mapping sections (see section 5.x; your code even cites 5.2.1.4.2). If you want the master rules for PRG/PRB/subband behavior, start here. ([ETSI][1])
* **3GPP TS 38.211** — CSI-RS resource mapping, port/CDM details (FD-CDM2/CDM4/CDM8 etc.). Useful for understanding why you can drop REs and how CDM groups work. ([ETSI][3])
* **3GPP TS 38.213** — CSI reporting procedures (what the UE reports and when). ([MathWorks][4])
* **MATLAB 5G Toolbox docs & examples** — the exact functions (`hDLPMISelect`, `nrLayerDemap`, `nrCSIRSIndices`, the CSI reporting example). Great to read alongside spec because MathWorks implements the spec rules and also adds deterministic choices for reproducibility. ([MathWorks][4])
* **EESM / MIESM literature** — how to compress per-RE SINR → single effective SINR for BLER/CQI mapping. Look up the classic EESM papers and MIESM calibration papers (EESM origin papers, plus more recent MIESM calibration). Examples: "An Accurate Model for EESM..." and MIESM papers. ([ResearchGate][6], [MDPI][5])

---

# Why MATLAB does some weird choices (summary)

* **Random i2 selection**: because 3GPP says so for PRG-driven CQI computation (avoid biased selection on PRG boundaries). So it's not MATLAB trolling you — it's following the spec. ([ETSI][1])
* **Seeding RNG**: reproducibility in examples/demos.
* **Averaging subbands to form wideband**: pragmatic and matches report modes. If you want more realistic link-level mapping, follow EESM/MIESM steps after this. ([MDPI][5])
* **Layer sum → codeword SINR**: because codewords may be mapped across layers; you must collapse layer SINRs into the codeword metric the BLER table expects. ([MathWorks][2])

---

# Practical tips as you code along

1. **Implement PMI selection → expose SINR cubes** exactly like MATLAB: it makes debugging easier.
2. **Honor PRGSize rules** — randomly select i2 per PRG/subband (seed RNG only for repeatable tests). Check TS 38.214 Section 5.2.1.4.2 for wording. ([ETSI][1])
3. **Use `nrLayerDemap` logic** (or implement equivalent): you need exact layer→codeword mapping per TS 38.211. ([MathWorks][7])
4. **Choose compression (EESM/MIESM)** and calibrate β or Φ functions with link-level runs — otherwise your CQI will be off. See EESM/MIESM papers. ([ResearchGate][6], [MDPI][5])

---

# Mini pseudo-flow (what that code is implementing)

1. Filter CSI-RS indices to the report BWP.
2. Call PMI selection → get candidate PMIs & SINR matrices (per RE / per subband / per i2 / per i1).
3. If PRGSize is configured: for each subband (or wideband), pick a random i2 from PRG's i2 set (seeded only for repeatable sims). Use that i2 to pick SINRs. ([ETSI][1])
4. Convert layer-level SINRs → codeword SINRs (nrLayerDemap + sum). ([MathWorks][2])
5. If asked for wideband, average subbands; else keep subband CQIs.
6. Compress with EESM/MIESM → map γ\_eff → CQI index via BLER lookups.

---

# Quick reading list (start here)

* **3GPP TS 38.214** — CQI/PMI/RI rules & PRG handling (Section \~5.2.1.4.2 referenced in MATLAB). Read first. ([ETSI][1])
* **3GPP TS 38.211** — CSI-RS mapping and CDM details (why you can skip REs). ([ETSI][3])
* **MathWorks 5G NR Downlink CSI Reporting doc & function refs** — to map MATLAB calls to spec behavior. ([MathWorks][4])
* **EESM / MIESM calibration papers** — for the effective SINR mapping step. ([ResearchGate][6], [MDPI][5])

---

If you want I can:

* Yank these exact lines into a *clean* Python/Matlab skeleton with comments linking each code chunk to the spec paragraph (so you can code along line-by-line), or
* Produce a minimal test case that reproduces MATLAB's random-i2 behavior so you see the difference when PRGSize is vs isn't configured.

Which one? I'll make it readable and meme-approved. ✨

[1]: https://www.etsi.org/deliver/etsi_ts/138200_138299/138214/17.01.00_60/ts_138214v170100p.pdf?utm_source=chatgpt.com "TS 138 214 - V17.1.0 - 5G; NR"
[2]: https://www.mathworks.com/help/5g/ref/nrlayerdemap.html?utm_source=chatgpt.com "nrLayerDemap - Layer demapping onto scrambled and ..."
[3]: https://www.etsi.org/deliver/etsi_ts/138200_138299/138211/17.03.00_60/ts_138211v170300p.pdf?utm_source=chatgpt.com "TS 138 211 - V17.3.0"
[4]: https://www.mathworks.com/help/5g/ug/5g-nr-downlink-csi-reporting.html?utm_source=chatgpt.com "5G NR Downlink CSI Reporting - MATLAB & Simulink"
[5]: https://www.mdpi.com/2079-9292/8/3/278?utm_source=chatgpt.com "Novel Calibration of MIESM and Reduction of CQI ..."
[6]: https://www.researchgate.net/publication/260582502_An_Accurate_Model_for_EESM_and_its_Application_to_Analysis_of_CQI_Feedback_Schemes_and_Scheduling_in_LTE?utm_source=chatgpt.com "An Accurate Model for EESM and its Application to ..."
[7]: https://www.mathworks.com/help/5g/ref/nrlayermap.html?utm_source=chatgpt.com "nrLayerMap - Layer mapping of modulated and scrambled ..."
